default:
  image: rootmen/gradle-docker-builder

variables:
  TESTCONTAINERS_HOST_OVERRIDE: "gitlabrunner.iedt.com.rzd"
  
stages:
  - check
  - test
  - build-native
  - build-docker
  - deploy

check:
  image: rootmen/gradle-docker-builder
  stage: check
  script:
    - gradle spotlessApply > spotlessApply.txt
  artifacts:
    paths:
      - docker info
      - spotlessApply.txt
    expire_in: 180 minutes

test:
  image: rootmen/gradle-docker-builder
  stage: test
  script:
    - gradle test
  artifacts:
    paths:
      - source/modules/submodules/submodules-database-repository/build/reports/tests/test/index.html
    expire_in: 180 minutes

build-native:
  image: rootmen/gradle-docker-builder
  stage: build-native
  script:
    - gradle :source:modules:module-rest-authorization-endpoint:build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
  artifacts:
    paths:
      - source/modules/module-rest-authorization-endpoint/build/module-rest-authorization-endpoint-1.0-SNAPSHOT-runner
      - source/modules/module-rest-authorization-endpoint/build/resources/*
    expire_in: 180 minutes
  only:
    - main


build-docker-rest-endpoint:
  image: rootmen/gradle-docker-builder
  stage: build-docker
  script:
    - cd ./source/modules/module-rest-authorization-endpoint
    - docker build -f ./src/main/docker/Dockerfile.native -t authorization-server/module-rest-authorization-endpoint:"$CI_COMMIT_REF_NAME"-"$CI_COMMIT_SHORT_SHA" .
    - docker save authorization-server/module-rest-authorization-endpoint:"$CI_COMMIT_REF_NAME"-"$CI_COMMIT_SHORT_SHA" -o authorization-server.module-rest-authorization-endpoint.tar
    - mv authorization-server.module-rest-authorization-endpoint.tar "$CI_BUILDS_DIR"/docker/images/
  artifacts:
    paths:
      - docker/images/authorization-server.module-rest-authorization-endpoint.tar
  only:
    - main

deploy-rest-endpoint:
  image: rootmen/gradle-docker-builder
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - cd ./docker
    - touch .env
    - echo "IMAGE_TAG=$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA" >> .env
    - scp ./.env $SSH_USER@$VM_IPADDRESS:/opt/edox-authorization/
    - scp ./* $SSH_USER@$VM_IPADDRESS:/opt/edox-authorization/
    - ssh $SSH_USER@$VM_IPADDRESS "/bin/bash -s" < deployscript.sh
  only:
    - main